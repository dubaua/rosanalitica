@import '~@/styles/shared/_globals.scss';

// naming convention
$row: $--row;
$column: $--column;
$offset: $--offset;

// settings
$breakpoints: (
  xxs: $--breakpoint-xxs,
  xs: $--breakpoint-xs,
  sm: $--breakpoint-sm,
  md: $--breakpoint-md,
  lg: $--breakpoint-lg,
  xl: $--breakpoint-xl,
  xxl: $--breakpoint-xxl,
  xxxl: $--breakpoint-xxxl,
);

$gutters: (
  xxs: $--gutter-xxs,
  xs: $--gutter-xs,
  sm: $--gutter-sm,
  md: $--gutter-md,
  lg: $--gutter-lg,
  xl: $--gutter-xl,
  xxl: $--gutter-xxl,
  xxxl: $--gutter-xxxl,
);

$column-counts: (
  xxs: $--column-count-xxs,
  xs: $--column-count-xs,
  sm: $--column-count-sm,
  md: $--column-count-md,
  lg: $--column-count-lg,
  xl: $--column-count-xl,
  xxl: $--column-count-xxl,
  xxxl: $--column-count-xxxl,
);

// helper maps
$main-axis-alignments: (
  left: flex-start,
  center: center,
  right: flex-end,
  around: space-around,
  between: space-between,
);

$cross-axis-alignments: (
  top: flex-start,
  middle: center,
  bottom: flex-end,
  stretch: stretch,
  baseline: baseline,
);

@mixin create-colunms($breakpoint, $column-count, $gutter) {
  .#{$row} {
    margin-right: $gutter * -0.5;
    margin-left: $gutter * -0.5;
  }

  .#{$column} {
    padding-right: $gutter * 0.5;
    padding-left: $gutter * 0.5;
  }

  @for $i from 1 through $column-count {
    .#{$column}-#{$breakpoint}-#{$i} {
      flex-basis: percentage($i / $column-count);
      max-width: percentage($i / $column-count);
    }
  }
}

@mixin create-alignments($breakpoint) {
  @each $align, $value in $main-axis-alignments {
    .#{$row}-#{$breakpoint}-#{$align} {
      justify-content: $value;
    }
  }

  @each $align, $value in $cross-axis-alignments {
    .#{$row}-#{$breakpoint}-#{$align} {
      align-items: $value;
    }
  }

  @each $align, $value in $cross-axis-alignments {
    .#{$column}-#{$breakpoint}-#{$align} {
      align-self: $value;
    }
  }
}

@mixin create-ordering($breakpoint) {
  $to: map-get-next($breakpoints, $breakpoint, false, key);
  @include from-to($breakpoint, $to) {
    .#{$column}-#{$breakpoint}-first {
      order: -1;
    }

    .#{$column}-#{$breakpoint}-last {
      order: 1;
    }
  }
}

@mixin create-offsets($breakpoint, $column-count) {
  @for $i from 1 through $column-count - 1 {
    .#{$column}-#{$breakpoint}-#{$offset}-#{$i} {
      margin-left: percentage($i / $column-count);
    }
  }
}

@mixin create-colunm-hider($breakpoint) {
  $to: map-get-next($breakpoints, $breakpoint, false, key);
  @include from-to($breakpoint, $to) {
    .#{$column}-#{$breakpoint}-0 {
      display: none;
    }
  }
}

.#{$row} {
  display: flex;
  flex: 0 1 auto;
  flex-flow: row wrap;
}

.#{$column} {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

@each $breakpoint, $size in $breakpoints {
  @include from($breakpoint) {
    $gutter: map-get($gutters, $breakpoint);
    $column-count: map-get($column-counts, $breakpoint);
    @include create-colunms($breakpoint, $column-count, $gutter);
    @include create-alignments($breakpoint);
    @include create-ordering($breakpoint);
    @include create-offsets($breakpoint, $column-count);
  }
  @include create-colunm-hider($breakpoint);
}
